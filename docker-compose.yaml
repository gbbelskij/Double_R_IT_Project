services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend

  backend:
    build: .
    container_name: flask_app
    command: python3 app.py
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql+psycopg2://myuser:mypassword@db:5432/RRecomend_db
      - SECRET_KEY=MAI_IS_THE_BEST_PLACE_FOR_VIPERRS
      - JWT_ALGORITHM=HS256
      - REDIS_HOST=redis  # Добавьте переменные окружения для Redis
      - REDIS_PORT=6379

  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: RRecomend_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data


  redis:
    image: redis:latest  # Используем официальный образ Redis
    container_name: redis_db
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data  # Добавляем volume для данных Redis
  
  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A tasks worker --loglevel=info  # Задача для worker
    depends_on:
      - redis
      - db
    environment:
      - DATABASE_URL=postgresql+psycopg2://myuser:mypassword@db:5432/RRecomend_db

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A tasks beat --loglevel=info  # Задача для beat
    depends_on:
      - redis
      - db
    environment:
      - DATABASE_URL=postgresql+psycopg2://myuser:mypassword@db:5432/RRecomend_db

volumes:
  pgdata:
  redisdata: